# coding: utf-8

"""
    DevInbox API

    API for creating temporary mailboxes and managing messages for testing purposes

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from devinbox_client.models.message_parsed_view_model import MessageParsedViewModel

class TestMessageParsedViewModel(unittest.TestCase):
    """MessageParsedViewModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MessageParsedViewModel:
        """Test MessageParsedViewModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MessageParsedViewModel`
        """
        model = MessageParsedViewModel()
        if include_optional:
            return MessageParsedViewModel(
                unique_id = '',
                var_from = [
                    ''
                    ],
                to = [
                    ''
                    ],
                cc = [
                    ''
                    ],
                bcc = [
                    ''
                    ],
                subject = '',
                body = '',
                is_html = True,
                received = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                parameters = {
                    'key' : ''
                    }
            )
        else:
            return MessageParsedViewModel(
                unique_id = '',
                received = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testMessageParsedViewModel(self):
        """Test MessageParsedViewModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
